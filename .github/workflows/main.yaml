on:
  push:
    branches:
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # sam build 
      - run: sam build --use-container

# Run Unit tests- Specify unit tests here 

# sam deploy
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name cloud-resume-challenge --s3-bucket aws-sam-cli-managed-default-samclisourcebucket-1j1gqmno9r5d9 --capabilities CAPABILITY_IAM --region us-east-1 

  
  api-smoke-test:
    needs: build-deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Change directory to Lambda
        run: cd Lambda
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: installs responses  
        run: pip install responses
      - name: install boto3
        run: pip install boto3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Install pytest and requests
        run: pip install pytest requests
      - name: Run the testing script
        env: 
          API_GATEWAY_URL: ${{ secrets.API_GATEWAY_URL }}
        run: pytest -v Lambda/app-test.py
